@page "/forum"
@using Microsoft.AspNetCore.SignalR.Client

<h3>Forum Chat</h3>

<div>
    <label>User: </label>
    <input @bind="UserName" />
</div>

<div style="border: 1px solid #ccc; border-radius: 5px; height: 300px; overflow-y: auto; margin-top: 1rem; padding: 1rem;">
    @foreach (var msg in Messages)
    {
        <div style="margin-bottom: 0.5rem;">
            <strong style="color: #7D0A0A">@msg.UserName:</strong> @msg.Text
        </div>
    }
</div>

<div style="margin-top: 1rem;">
    <textarea @bind="CurrentMessage" style="width: 100%; height: 60px;"></textarea>
    <button @onclick="SendMessage" style="background-color: #7D0A0A; color: white; padding: 0.6rem 1.2rem; border: none; border-radius: 5px; margin-top: 0.5rem;">
        Send
    </button>
</div>

@code {
    private HubConnection? hubConnection;
    public string UserName { get; set; } = "Anonymous";
    public string CurrentMessage { get; set; } = "";
    public List<MessageDto> Messages { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:5157/chathub")
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            Messages.Add(new MessageDto { UserName = user, Text = message });
            InvokeAsync(StateHasChanged);
        });

        try
        {
            await hubConnection.StartAsync();
            Console.WriteLine("Connected to chat hub.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Connection failed: {ex.Message}");
        }
    }

    private async Task SendMessage()
    {
        if (hubConnection is not null && hubConnection.State == HubConnectionState.Connected && !string.IsNullOrWhiteSpace(CurrentMessage))
        {
            await hubConnection.InvokeAsync("SendMessage", UserName, CurrentMessage);
            CurrentMessage = "";
        }
    }

    public class MessageDto
    {
        public string UserName { get; set; }
        public string Text { get; set; }
    }
}

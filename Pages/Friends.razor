@page "/friends"
@inject HttpClient Http

<h2 class="page-title">Friends</h2>

<input type="text" @bind="searchQuery" placeholder="Search by name, surname or email..." class="search-input" />

@if (friends == null)
{
    <p>Loading friends...</p>
}
else
{
    <table class="friends-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var friend in FilteredFriends)
            {
                <tr>
                    <td>@friend.Name</td>
                    <td>@friend.Surname</td>
                    <td>@friend.Email</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Friend> friends;
    private string searchQuery = "";

    protected override async Task OnInitializedAsync()
    {
        friends = await Http.GetFromJsonAsync<List<Friend>>("http://localhost:5058/api/friends");
    }

    private IEnumerable<Friend> FilteredFriends =>
        string.IsNullOrWhiteSpace(searchQuery)
            ? friends
            : friends.Where(f =>
                (f.Name?.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (f.Surname?.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (f.Email?.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ?? false)
            );

    public class Friend
    {
        public string? Name { get; set; }
        public string? Surname { get; set; }
        public string? Email { get; set; }
    }
}
